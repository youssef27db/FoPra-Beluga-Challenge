name: Build Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        python: ["cp38", "cp39", "cp310", "cp311"]

    steps:
      - uses: actions/checkout@v3

      # Install OpenMP on macOS
      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libomp
          echo "Setting up libomp paths"
          echo "LDFLAGS=-L$(brew --prefix libomp)/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix libomp)/include" >> $GITHUB_ENV
      
      # Install OpenMP on Linux
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libomp-dev

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: "${{ matrix.python }}-*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"
          # Skip PyPy builds
          CIBW_SKIP: "pp* *musllinux*"
          # Working directory for the module
          CIBW_PROJECT: "./rl/mcts/mcts_fast"
          # Pass OpenMP flags to the build process
          CIBW_ENVIRONMENT_MACOS: "LDFLAGS='${{ env.LDFLAGS }}' CPPFLAGS='${{ env.CPPFLAGS }}'"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}-${{ matrix.python }}

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on tag push
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Uncomment for test PyPI
          # repository_url: https://test.pypi.org/legacy/
